#!/bin/bash

# Get earthquake path from input filepath
CMTSOLUTION=$1

if [ -z "$CMTSOLUTION" ]
then
      echo "No CMTSOLUTION INPUT is empty. Stopping. Choose earthquake"
      exit 1
else
      echo "Inverting $(realpath $CMTSOLUTION)"
fi


# STUFF TO BE SET PRIOR TO RUNNING ANYTHING
GCMT3D='/home/lsawade/gcmt3d'
WORKFLOW_DIR="$GCMT3D/workflow"
PARAMETER_PATH="$WORKFLOW_DIR/params"
SLURM_DIR="$WORKFLOW_DIR/slurmwf"
BIN_DIR="$WORKFLOW_DIR/bins"
DATABASE_DIR='/tigress/lsawade/database'

# EARTHQUAKE PARAMETERS and Paths derived from the file
# Getting database entry from CMTSOLUTION FILE
CID=`cat $CMTSOLUTION | head -2 | tail -1 | cut -d: -f2 | tr -d '[:space:]'`
CIN_DB="$DATABASE_DIR/$CID/$CID.cmt"
CDIR=`dirname $CIN_DB` # Earthquake Directory
CMT_SIM_DIR=$CDIR/CMT_SIMs # Simulation directory


# directory
PROCESSED=$CDIR/seismograms/processed_seismograms # Processed dir
SEISMOGRAMS=$CDIR/seismograms # Seismos
STATION_DATA=$CDIR/station_data
LOG_DIR=$CDIR/logs # Logging directory
INVERSION_OUTPUT_DIR=$CDIR/inversion
WINDOW_PATHS=$CDIR/workflow_files/path_files/window_paths
PROCESS_PATHS=$CDIR/workflow_files/path_files/process_paths # Process Path
CONVERSION_PATHS=$CDIR/workflow_files/path_files/conversion_paths
INVERSION_DIRECTORY=/tigress/lsawade/source_inversion_II
SYNTHETIC_FILES=$INVERSION_DIRECTORY/raw_synt/archive.400_events
OBSERVED_FILES=$INVERSION_DIRECTORY/raw_obsd/download/waveform
STATION_FILES=$INVERSION_DIRECTORY/raw_obsd/download/station

# Create Path-files
CPP_LOG_FILE="$LOG_DIR/$CID.001.Create-Process-Paths.STDOUT"
echo "Create Process Paths Logfile: $CPP_LOG_FILE"
create-path-files -f $CIN_DB -p $PARAMETER_PATH > $CPP_LOG_FILE

# MOVING FILES AROUND
SUBMITTED=$INVERSION_DIRECTORY/submitted_cmts
DONE=$INVERSION_DIRECTORY/done_cmts

echo
echo "******** PACKAGE INFO ********************************"
echo "GCMT3D Location:_________________ $GCMT3D"
echo "Workflow Directory:______________ $WORKFLOW_DIR"
echo "Slurmjob Directory:______________ $SLURM_DIR"
echo "Bin directory (important):_______ $BIN_DIR" 
echo
echo

echo "******** DATABASE INFO *******************************"
echo "Database directory:______________ $DATABASE_DIR"
echo
echo

echo "******** EARTHQUAKE INFO *****************************"
echo "CMTSOLUTION:_____________________ $CMTSOLUTION"
echo "Earthquake ID:___________________ $CID"
echo "Earthquake Directory:____________ $CDIR"
echo "Earthquake File in Database:_____ $CIN_DB"
echo "Inversion Logging Directory:_____ $LOG_DIR"
echo "Simulation Directory:____________ $CMT_SIM_DIR"
echo "Process Path Directory:__________ $PROCESS_PATHS"
echo "Window Path Directory:___________ $WINDOW_PATHS"
echo
echo

# Start slurm script that does the whole shindig

sbatch << EOF
#!/bin/bash
#SBATCH --job-name=invert_$CID
# SBATCH --output=$LOG_DIR/$CID.out
#SBATCH --nodes=1
#SBATCH --ntasks-per-node=32
#SBATCH --mem=200GB
#SBATCH --time=01:00:00
#SBATCH --reservation=test
#SBATCH --mail-user=lsawade@princeton.edu
#SBATCH --mail-type=END

# #WHAT???????? #SBATCH --requeue 

# Load the compilers and shit
module purge

# Load anaconda and set environment
module load anaconda3
conda activate gcmt3d

module load openmpi/gcc
module load cudatoolkit/10.0

# Define the parameters
CMT_LIST=(CMT CMT_rr CMT_tt CMT_pp CMT_rt CMT_rp CMT_tp CMT_depth CMT_lat CMT_lon)


######## Create Process Paths ########
echo "******** CREATE PROCESS PATHS ************************"
echo " "
CPP_LOG_FILE="$LOG_DIR/$CID.006.Create-Process-Paths.STDOUT"
echo "Create Process Paths Logfile: \$CPP_LOG_FILE"
srun -N1 -n1 create-path-files -f $CIN_DB -p $PARAMETER_PATH > \$CPP_LOG_FILE
echo " "

######## CONVERT TRACES ########
echo "******** CONVERT TRACES ******************************"
echo " "
# Observed data
CONV_LOG=$LOG_DIR/$CID.005.Converting-to-ASDF
for CONV_PATH_FILE in \$(ls $CONVERSION_PATHS); do

    echo "Conversion yml: \$CONV_PATH_FILE"
    echo "Conversion logfile: \$CONV_LOG"
    srun -N1 -n1 convert2asdf -f \$CONV_PATH_FILE 2>&1 | tee \$CONV_LOG &

done
echo " "
echo "Done."
echo " "
echo " "

######### Process Traces ########
######## Process Traces ########
echo "******** PROCESS TRACES ******************************"
echo " "
PROCESS_LOG="$LOG_DIR/$CID.007.Process-Traces"

export OMP_NUM_THREADS=1

# Get the different period bands as they will use the same asdf file
WAVE_LIST=(body surface mantle)
echo "\${WAVE_LIST[@]}"
for WAVE in "\${WAVE_LIST[@]}"; do

    for PROCESS_PATH in \$(ls $PROCESS_PATHS); do
        if [[ \$PROCESS_PATH == *"\$WAVE"* ]]; then
            PROCESS_PATH_FILE="$PROCESS_PATHS/\$PROCESS_PATH"
            echo "Processing yml: \$PROCESS_PATH_FILE"
            PROC_LOG_FILE="\$PROCESS_LOG.\$PROCESS_PATH.STDOUT"
            echo "Processing logfile: \$PROC_LOG_FILE"
            srun -n1 process-asdf -f \$PROCESS_PATH_FILE 2>&1 | tee \$PROC_LOG_FILE &
        fi
    done
    wait
done
echo " "
echo "Done."
echo " "
echo " "


######## Window Traces ########
echo "******** WINDOW TRACES *******************************"
echo " "
# Do body and surface waves separately since they access the same
# asdf files
# Body waves
WINDOW_LOG="$LOG_DIR/$CID.008.Window-Traces"
for WINDOW_PATH in \$(ls $WINDOW_PATHS); do
  WINDOW_PATH_FILE="$WINDOW_PATHS/\$WINDOW_PATH"
  echo "Windowing yml: \$WINDOW_PATH_FILE"
  WIND_LOG_FILE="\$WINDOW_LOG.\$WINDOW_PATH.STDOUT"
  echo "Windowing logfile: \$WIND_LOG_FILE"
  srun -N1 -n25 select-windows -f \$WINDOW_PATH_FILE 2>&1 | tee \$WIND_LOG_FILE
done
wait
echo " "
echo "Done."
echo " "
echo " "

######## Inversion ########
echo "******** INVERSION ***********************************"
echo " "
INVERSION_LOG_FILE="$LOG_DIR/$CID.010.Inversion.STDOUT"
echo "Inversion logfile: \$INVERSION_LOG_FILE"
inversion -f $CIN_DB 2>&1 | tee \$INVERSION_LOG_FILE
echo " "
echo "Done."
echo " "
echo " "

######## Gridsearch ########
echo "******** GRIDSEARCH ***********************************"
echo " "
GRIDSEARCH_LOG_FILE="$LOG_DIR/$CID.012.Gridsearch.STDOUT"
echo "Gridsearch logfile: \$GRIDSEARCH_LOG_FILE"
# Grid search
gridsearch -f $CIN_DB 2>&1 | tee \$GRIDSEARCH_LOG_FILE
plot-event-summary $INVERSION_OUTPUT_DIR/cmt3d/*stats.json -g $INVERSION_OUTPUT_DIR/g3d/*stats.json -f $INVERSION_OUTPUT_DIR/full_summary.pdf
echo " "
echo "Done."
echo " "
echo " "

## If inversion successful, clear out synthetic and processed data
#for invfile in $INVERSION_OUTPUT_DIR/*.inv.pdf
#do
#    if [[ -e \$invfile ]]; then
#        echo 'Looks like inversion was successful.'
#        echo 'Removing files...'
#        rm -rf $SEISMOGRAMS
#        rm -rf $CMT_SIM_DIR
#        rm -rf $STATION_DATA
#        echo 'Done.'
#    fi
#done

exit 0
EOF
