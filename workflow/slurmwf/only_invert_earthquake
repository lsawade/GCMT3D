#!/bin/bash

# Get earthquake path from input filepath
CMTSOLUTION=$(realpath $1)

if [ -z "$CMTSOLUTION" ]
then
      echo "No CMTSOLUTION INPUT is empty. Stopping. Choose earthquake"
      exit 1
else
      echo "Inverting $(realpath $CMTSOLUTION)"
fi


# STUFF TO BE SET PRIOR TO RUNNING ANYTHING
GCMT3D='/home/lsawade/gcmt3d'
WORKFLOW_DIR="$GCMT3D/workflow"
PARAMETER_PATH="$WORKFLOW_DIR/params"
SLURM_DIR="$WORKFLOW_DIR/slurmwf"
BIN_DIR="$WORKFLOW_DIR/bins"
DATABASE_DIR='/tigress/lsawade/database_wenjie'

# EARTHQUAKE PARAMETERS and Paths derived from the file
# Getting database entry from CMTSOLUTION FILE
# EARTHQUAKE PARAMETERS and Paths derived from the file
# Getting database entry from CMTSOLUTION FILE
CID=$(cat $CMTSOLUTION | head -2 | tail -1 | cut -d: -f2 | tr -d '[:space:]')
CIN_DB="$DATABASE_DIR/$CID/$CID.cmt"
CDIR=$(dirname $CIN_DB) # Earthquake Directory
CMT_SIM_DIR=$CDIR/CMT_SIMs # Simulation directory

# directory
PROCESSED=$CDIR/seismograms/processed_seismograms # Processed dir
SEISMOGRAMS=$CDIR/seismograms # Seismos
STATION_DATA=$CDIR/station_data
LOG_DIR=$CDIR/logs # Logging directory
INVERSION_OUTPUT_DIR=$CDIR/inversion
WINDOW_PATHS=$CDIR/workflow_files/path_files/window_paths
PROCESS_PATHS=$CDIR/workflow_files/path_files/process_paths # Process Path
CONVERSION_PATHS=$CDIR/workflow_files/path_files/conversion_paths
INVERSION_DIRECTORY=/tigress/lsawade/source_inversion_II
SYNTHETIC_FILES=$INVERSION_DIRECTORY/raw_synt/archive.400_events
OBSERVED_FILES=$INVERSION_DIRECTORY/raw_obsd/download/waveform
STATION_FILES=$INVERSION_DIRECTORY/raw_obsd/download/station

# MOVING FILES AROUND
SUBMITTED=$INVERSION_DIRECTORY/submitted_cmts
DONE=$INVERSION_DIRECTORY/done_cmts


echo
echo "******** PACKAGE INFO ********************************"
echo "GCMT3D Location:_________________ $GCMT3D"
echo "Workflow Directory:______________ $WORKFLOW_DIR"
echo "Parameter Directory:_____________ $PARAMETER_PATH"
echo "Slurmjob Directory:______________ $SLURM_DIR"
echo "Bin directory (important):_______ $BIN_DIR" 
echo
echo

echo "******** DATABASE INFO *******************************"
echo "Database directory:______________ $DATABASE_DIR"
echo
echo

echo "******** EARTHQUAKE INFO *****************************"
echo "CMTSOLUTION:_____________________ $CMTSOLUTION"
echo "Earthquake ID:___________________ $CID"
echo "Earthquake Directory:____________ $CDIR"
echo "Earthquake File in Database:_____ $CIN_DB"
echo "Inversion Logging Directory:_____ $LOG_DIR"
echo "Simulation Directory:____________ $CMT_SIM_DIR"
echo "Process Path Directory:__________ $PROCESS_PATHS"
echo "Window Path Directory:___________ $WINDOW_PATHS"
echo
echo

# Start slurm script that does the whole shindig
module load anaconda3
conda activate gcmt3d_wenjie

ENTRY_LOG_FILE="$LOG_DIR/$CID.000.Create-Entry.txt"
echo "Create Entry Logfile: $ENTRY_LOG_FILE"
create-entry-wj -f $CMTSOLUTION -d $DATABASE_DIR -p $PARAMETER_PATH > $ENTRY_LOG_FILE


# MOVE CMT FILE TO SUBMISSION DIRECTORY
mv $CMTSOLUTION $SUBMITTED/

sbatch << EOF
#!/bin/bash
#SBATCH --job-name=I_$CID
#SBATCH --output=$LOG_DIR/$CID.out
#SBATCH --nodes=1
#SBATCH --ntasks-per-node=30
#SBATCH --mem=200GB
#SBATCH --time=00:40:00
#    SBATCH --reservation=test


# #WHAT???????? #SBATCH --requeue 

# Load the compilers and shit
module purge

# Load anaconda and set environment
module load anaconda3
conda activate gcmt3d_wenjie

module load openmpi/gcc
module load cudatoolkit/10.0


# Create Path-files
CPP_LOG_FILE="$LOG_DIR/$CID.001.Create-Process-Paths.STDOUT"
echo "Create Process Paths Logfile: $CPP_LOG_FILE"
create-path-files -f $CIN_DB -p $PARAMETER_PATH > \$CPP_LOG_FILE


######## Inversion ########
echo "******** INVERSION ***********************************"
echo " "
INVERSION_LOG_FILE="$LOG_DIR/$CID.010.Inversion.STDOUT"
echo "Inversion logfile: \$INVERSION_LOG_FILE"
inversion -f $CIN_DB 2>&1 | tee \$INVERSION_LOG_FILE
echo " "
echo "Done."
echo " "
echo " "

######## Gridsearch ########
echo "******** GRIDSEARCH ***********************************"
echo " "
GRIDSEARCH_LOG_FILE="$LOG_DIR/$CID.012.Gridsearch.STDOUT"
echo "Gridsearch logfile: \$GRIDSEARCH_LOG_FILE"
# Grid search
gridsearch -f $CIN_DB 2>&1 | tee \$GRIDSEARCH_LOG_FILE
plot-event-summary $INVERSION_OUTPUT_DIR/cmt3d/*stats.json -g $INVERSION_OUTPUT_DIR/g3d/*stats.json -f $INVERSION_OUTPUT_DIR/full_summary.pdf
echo " "
echo "Done."
echo " "
echo " "

######## Check whether succesfull, and if yes move to done dir #####

if [ -f $INVERSION_OUTPUT_DIR/full_summary.pdf ];
then
    # MOVE CMT FILE TO DONE DIRECTORY
    mv $SUBMITTED/\$(basename $CMTSOLUTION) $DONE/\$(basename $CMTSOLUTION)
fi

exit 0
EOF
